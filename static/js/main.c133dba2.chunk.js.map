{"version":3,"sources":["Cell.js","Row.js","Widget.js","Ticker.js","Grid.js","App.js","reducers/rootReducer.js","index.js","store.js"],"names":["Cell","props","onClick","handleClick","className","val","Row","grid","Array","len","keys","this","map","num","key","offset","e","handleCellClick","vals","React","Component","Widget","Ticker","setTimer","timerID","setInterval","tick","state","interval","setState","_","timerSet","unsetTimer","clearInterval","toggleTimer","changeInterval","bpm","parseInt","target","value","Error","subrender","clear","onChange","disabled","type","min","max","placeholder","toString","Grid","_addWidgetInternal","pos0","pos1","newWidgets","JSON","parse","stringify","widgets","ctr","idx","pos","dir","newSynths","synths","slice","push","Tone","connect","reverb","feedback","toDestination","updateVals","clickedWidgets","Object","values","filter","w","flat","length","gridsize","initVals","fill","forEach","getArrow","updateWidget","handleCollisions","sounded","playSounds","highlightCells","widget","synth","didHitWall","makeSound","cellsToFlash","i","j","indexOf","cells","document","getElementsByClassName","id","innerText","setTimeout","last","triggerAttackRelease","scale","oldWidget","keysAndVals","join","groupedWidgetIds","groupBy","x","xs","access","reduce","rv","App","combineReducers","ReactDOM","render","StrictMode","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","getElementById"],"mappings":"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","file":"static/js/main.c133dba2.chunk.js","sourcesContent":["export function Cell(props) {\n  return <td onClick={props.handleClick} className='cell'>{props.val}</td>;\n}","import React from 'react';\nimport { Cell } from './Cell';\nexport class Row extends React.Component {\n  constructor(props) {\n    super(props);\n    this.grid = [...Array(this.props.len).keys()];\n  }\n\n  render() {\n    return (\n      <tr>\n        {\n          this.grid.map(num => {\n            let key = this.props.offset * this.props.len + num;\n            return <Cell handleClick={e => this.props.handleCellClick(e, num, this.props.offset)} key={key} val={this.props.vals[num]} />\n\n          })\n        }\n      </tr>\n    );\n  }\n}\n","export function Widget(props) {\n    return (\n        <div>\n            {/* idx: {props.idx}\n            pos: {props.pos.toString()}\n            dir: {props.dir.toString()} */}\n        </div>\n    );\n}","import React from 'react';\nexport class Ticker extends React.Component {\n    tick() {\n        throw new Error(\"tick not implemented\");\n    }\n\n    clear() {\n        throw new Error(\"clear not implemented\")\n    }\n\n    subrender() {\n        throw new Error(\"subrender not implemented\");\n    }\n\n    setTimer = () => {\n        this.timerID = setInterval(\n            () => this.tick(),\n            this.state.interval\n        );\n        this.setState((state, _) =>  ({...state, timerSet: true}));\n      }\n\n    unsetTimer = () => {\n        clearInterval(this.timerID);\n        this.setState((state, _) =>  ({...state, timerSet: false}));\n    }\n\n    toggleTimer = () => {\n        this.state.timerSet ? this.unsetTimer() : this.setTimer();\n    }\n\n    componentWillUnmount() {\n        this.unsetTimer();\n    }\n\n    changeInterval = (e) => {\n        let bpm = parseInt(e.target.value, 10);\n        this.setState({interval:  30000/bpm})\n        // TODO update running ticker...\n    }\n\n    render() {\n        return (\n            <div>\n                {this.subrender()}\n                <div className='controls'>\n                <button onClick={this.toggleTimer}>\n                    {this.state.timerSet ? \"Pause\" : \"Play\"}\n                </button>\n                <span className=\"spacer\"/>\n                <button onClick={this.clear}>Clear</button>\n                <span className=\"spacer\"/>\n                Tempo:&nbsp;\n                <input className=\"bpm\" onChange={this.changeInterval} disabled={this.state.timerSet} type=\"number\" min=\"50\" max=\"300\" placeholder={parseInt(30000/this.state.interval).toString()}/>\n                </div>\n            </div >\n        );\n    }\n}\n","import React from 'react';\nimport { Row } from './Row';\nimport { Widget } from './Widget';\nimport { Ticker } from './Ticker';\nimport * as Tone from 'tone';\n\nexport class Grid extends Ticker {\n  constructor(props) {\n    super(props);\n\n    this.grid = [...Array(this.props.gridsize).keys()];\n    this.reverb = new Tone.Reverb(0.3).toDestination();\n    this.feedback = new Tone.FeedbackDelay(0.3, 0.2).toDestination();\n\n    this.state = {\n      widgets: {},\n      synths: [],\n      vals: this.initVals(),\n      interval: 200,\n      ctr: 0,\n    }\n\n    // TODO this causes tick() to run all the time\n    // document.addEventListener('keydown', event => {\n    //   if (event.code === 'Space') {\n    //     this.toggleTimer();\n    //   }\n    // })\n  }\n\n  _addWidgetInternal = (state, pos0, pos1) => {\n    let newWidgets = JSON.parse(JSON.stringify(state.widgets));\n    newWidgets[state.ctr] = {idx: state.ctr, pos: [pos0, pos1], dir: 0};\n\n    let newSynths = state.synths.slice();\n    newSynths.push(new Tone.Synth().connect(this.reverb).connect(this.feedback).toDestination());\n    return { ...state, synths: newSynths, widgets: newWidgets, vals: this.updateVals(newWidgets), ctr: state.ctr + 1 };\n  }\n\n  clear = () => {\n     this.setState((state, _) => ({...state, widgets: {}, vals: this.updateVals({})}));\n  }\n\n  handleCellClick = (e, pos0, pos1) => {\n    this.setState((state, _) => {\n      let clickedWidgets = Object.values(state.widgets).filter(w => w.pos[0] === pos0 && w.pos[1] === pos1).flat();\n      if (clickedWidgets.length === 0) {\n        // Put widget there\n        return this._addWidgetInternal(state, pos0, pos1);\n\n      } else if (clickedWidgets.length === 1) {\n        let idx = clickedWidgets[0].idx;\n        let newWidgets = JSON.parse(JSON.stringify(state.widgets));\n        let dir = newWidgets[idx].dir;\n        if (dir < 3) {\n          // rotate widget\n          newWidgets[idx].dir = (dir + 1) % 4;\n          // TODO fix double rotation\n        } else {\n          // delete widget\n          delete newWidgets[idx];\n        }\n        return { ...state, widgets: newWidgets, vals: this.updateVals(newWidgets) };\n      }\n    });\n  }\n\n  initVals() {\n    return new Array(this.props.gridsize).fill('')\n      .map(_ => new Array(this.props.gridsize).fill(''));\n  }\n\n  static getArrow(pos) {\n    if (pos === 0) {\n      return '↑';\n    } else if (pos === 1) {\n      return '→';\n    } else if (pos === 2) {\n      return '↓';\n    } else {\n      return '←';\n    }\n  }\n\n  updateVals(widgets) {\n    let vals = this.initVals();\n    Object.values(widgets).forEach(w => vals[w.pos[1]][w.pos[0]] += Grid.getArrow(w.dir));\n    return vals;\n  }\n\n  tick() {\n    this.setState((state, _) => {\n      let newWidgets = {};\n      Object.keys(state.widgets).forEach(idx => {\n        newWidgets[idx] = this.updateWidget(state.widgets[idx]);\n      });\n      newWidgets = this.handleCollisions(newWidgets);\n      return { ...state, widgets: newWidgets, vals: this.updateVals(newWidgets)};\n    });\n    let sounded = this.playSounds();\n    this.highlightCells(sounded);\n  }\n\n  playSounds() {\n    let sounded = {'cols': [], 'rows': []};\n    Object.keys(this.state.widgets).forEach(idx => {\n      // if hit the wall, sound\n      let widget = this.state.widgets[idx];\n      let synth = this.state.synths[idx];\n      if (this.didHitWall(widget.pos, widget.dir)) {\n        this.makeSound(widget.pos, widget.dir, synth);\n\n        if (widget.dir % 2) {\n          sounded['rows'].push(widget.pos[1]);\n        } else {\n          sounded['cols'].push(widget.pos[0]);\n        }\n      }\n    });\n    return sounded;\n  }\n\n  highlightCells(sounded) {\n    let cellsToFlash = [];\n    for (let i = 0; i < this.props.gridsize; i++) {\n      for (let j=0; j < this.props.gridsize; j++) {\n        if (sounded['rows'].indexOf(i) !== -1  || sounded['cols'].indexOf(j) !== -1) {\n          cellsToFlash.push(i*this.props.gridsize + j);\n        }\n      }\n    }\n    let cells = document.getElementsByClassName(\"cell\");\n    cellsToFlash.forEach(id => {if (!cells[id].innerText) {cells[id].className = 'cell flashing'}});\n    setTimeout(() => cellsToFlash.forEach(id => {if (!cells[id].innerText) {cells[id].className = 'cell'}}), 75);\n  }\n\n  didHitWall(pos, dir) {\n    const last = this.props.gridsize - 1;\n    return (dir === 0 && pos[1] === 0)\n      || (dir === 1 && pos[0] === last)\n      || (dir === 2 && pos[1] === last)\n      || (dir === 3 && pos[0] === 0);\n  }\n\n  makeSound(pos, dir, synth) {\n    let val = 0;\n    const last = this.props.gridsize - 1;\n    // TODO demystify this code\n    if ((dir % 2 === 1) && (pos[0] === 0 || pos[0] === last)) {\n      val = last - pos[1];\n    } else {\n      val = pos[0];\n    }\n    synth.triggerAttackRelease(this.props.scale[val % this.props.scale.length], \"8n\", Tone.now(), 0.3);\n  }\n\n  updateWidget(oldWidget) {\n    let widget = JSON.parse(JSON.stringify(oldWidget));\n    // if this will hit the wall, reverse\n    if (this.didHitWall(widget.pos, widget.dir)) {\n      widget.dir = (widget.dir + 2) % 4;\n    }\n\n    if (widget.dir === 2) {\n      widget.pos = [widget.pos[0], (widget.pos[1] + 1 + this.props.gridsize) % this.props.gridsize]\n    } else if (widget.dir === 0) {\n      widget.pos = [widget.pos[0], (widget.pos[1] - 1 + this.props.gridsize) % this.props.gridsize]\n    } else if (widget.dir === 1) {\n      widget.pos = [(widget.pos[0] + 1 + this.props.gridsize) % this.props.gridsize, widget.pos[1]];\n    } else {\n      widget.pos = [(widget.pos[0] - 1 + this.props.gridsize) % this.props.gridsize, widget.pos[1]];\n    }\n\n    return widget;\n  }\n\n  handleCollisions(widgets) {\n    const keysAndVals = Object.values(widgets)\n      .map(w => [w.idx, w.pos.join(',')]);\n\n    const groupedWidgetIds = Object.values(this.groupBy(keysAndVals, 1, 0));\n    groupedWidgetIds.filter(x => x.length > 2).flat().forEach(id => {\n      // 3 or more, just reverse direction\n      widgets[id].dir = (widgets[id].dir + 2) % 4;\n    });\n    groupedWidgetIds.filter(x => x.length === 2).flat().forEach(id => {\n      // 2, rotate\n      widgets[id].dir = (widgets[id].dir + 1) % 4;\n    });\n    return widgets;\n  }\n\n  groupBy(xs, key, access) {\n    return xs.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x[access]);\n      return rv;\n    }, {});\n  };\n\n  subrender() {\n    return (\n      <div>\n        <table>\n          <tbody>\n            {\n              this.grid.map(num => {\n                return <Row handleCellClick={this.handleCellClick}\n                  offset={num} key={num} vals={this.state.vals[num]} len={this.props.gridsize} />\n              })\n            }\n          </tbody>\n        </table>\n        <br />\n        {\n          Object.values(this.state.widgets).map(w => {\n            return <Widget\n              idx={w.idx}\n              key={w.idx}\n              dir={w.dir}\n              pos={w.pos}\n            />\n          })\n        }\n      </div>\n    );\n  }\n}\n","import './App.css';\nimport { Grid } from './Grid';\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid\n          gridsize={9}\n          scale={[\"E3\", \"B3\", \"C4\", \"D4\", \"E4\", \"F#4\", \"G4\", \"B4\", \"D5\"]}\n        />\n      </div >\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nexport default combineReducers({\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore(initialState = {}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}