{"version":3,"sources":["Cell.js","Row.js","Widget.js","Ticker.js","Grid.js","App.js","reducers/rootReducer.js","index.js","store.js"],"names":["Cell","props","onClick","handleClick","className","val","Row","grid","Array","len","keys","this","map","num","key","offset","e","handleCellClick","vals","React","Component","Widget","Ticker","setTimer","timerID","setInterval","tick","setState","state","timerSet","unsetTimer","clearInterval","Error","subrender","disabled","Grid","pos0","pos1","addWidget","gridsize","widgets","synths","initVals","push","idx","length","pos","dir","Tone","toDestination","updateVals","bind","fill","x","forEach","w","getArrow","updateWidget","handleCollisions","last","synth","triggerAttackRelease","scale","widget","didHitWall","newDir","makeSound","data","Object","d","rev","split","parseInt","undefined","xs","access","reduce","rv","App","connect","combineReducers","ReactDOM","render","StrictMode","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById"],"mappings":"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","file":"static/js/main.f005a510.chunk.js","sourcesContent":["export function Cell(props) {\n  return <td onClick={props.handleClick} className='cell'>{props.val}</td>;\n}","import React from 'react';\nimport { Cell } from './Cell';\nexport class Row extends React.Component {\n  constructor(props) {\n    super(props);\n    this.grid = [...Array(this.props.len).keys()];\n  }\n\n  render() {\n    return (\n      <tr>\n        {\n          this.grid.map(num => {\n            let key = this.props.offset * this.props.len + num;\n            return <Cell handleClick={e => this.props.handleCellClick(e, num, this.props.offset)} key={key} val={this.props.vals[num]} />\n\n          })\n        }\n      </tr>\n    );\n  }\n}\n","export function Widget(props) {\n    return (\n        <div>\n            {/* idx: {props.idx}\n            pos: {props.pos.toString()}\n            dir: {props.dir.toString()} */}\n        </div>\n    );\n}","import React from 'react';\nexport class Ticker extends React.Component {\n    tick() {\n        throw new Error(\"tick not implemented\");\n    }\n\n    subrender() {\n        throw new Error(\"subrender not implemented\");\n    }\n\n    setTimer = () => {\n        this.timerID = setInterval(\n            () => this.tick(),\n            250\n        );\n        this.setState({ ...this.state, timerSet: true });\n    }\n\n    unsetTimer = () => {\n        clearInterval(this.timerID);\n        this.setState({ ...this.state, timerSet: false });\n    }\n\n    componentWillUnmount() {\n        this.unsetTimer();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.subrender()}\n                <button disabled={this.state.timerSet} onClick={this.setTimer}>\n                    Play\n        </button>\n                <button disabled={!this.state.timerSet} onClick={this.unsetTimer}>\n                    Pause\n        </button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Row } from './Row';\nimport { Widget } from './Widget';\nimport { Ticker } from './Ticker';\nimport * as Tone from 'tone';\n\nexport class Grid extends Ticker {\n  constructor(props) {\n    super(props);\n    this.grid = [...Array(this.props.gridsize).keys()];\n    this.widgets = [];\n    this.synths = [];\n    this.state = {\n      widgets: this.widgets,\n      synths: this.synths,\n      vals: this.initVals(),\n    }\n\n    // TODO so far: just support adding, not deleting...\n    this.addWidget = (pos0 = 0, pos1 = 0) => {\n      this.widgets.push({ idx: this.state.widgets.length, pos: [pos0, pos1], dir: 0 });\n      this.synths.push(new Tone.Synth().toDestination());\n      this.setState({ ...this.state, synths: this.synths, widgets: this.widgets });\n      this.updateVals();\n    }\n\n    this.handleCellClick.bind(this);\n\n  }\n\n  handleCellClick = (e, pos0, pos1) => {\n    // Put widget there\n    this.addWidget(pos0, pos1);\n    // TODO only do this when no widget\n  };\n\n  initVals() {\n    return new Array(this.props.gridsize).fill('_')\n      .map(x => new Array(this.props.gridsize).fill(''));\n  }\n\n  getArrow(pos) {\n    if (pos === 0) {\n      return 'ðŸ¡»';\n    } else if (pos === 1) {\n      return 'ðŸ¡º';\n    } else if (pos === 2) {\n      return 'ðŸ¡¹';\n    } else {\n      return 'ðŸ¡¸';\n    }\n  }\n\n  updateVals() {\n    let vals = this.initVals();\n    this.widgets.forEach(w => vals[w.pos[1]][w.pos[0]] += this.getArrow(w.dir));\n    this.setState({ ...this.state, vals });\n  }\n\n  tick() {\n    this.widgets = this.state.widgets;\n    for (let idx = 0; idx < this.state.widgets.length; idx++) {\n      this.updateWidget(idx);\n    }\n    this.setState({ ...this.state, widgets: this.widgets });\n    this.handleCollisions();\n    this.updateVals();\n  }\n\n  didHitWall(pos, dir) {\n    const last = this.props.gridsize - 1;\n    return (dir === 0 && pos[1] === last)\n      || (dir === 1 && pos[0] === last)\n      || (dir === 2 && pos[1] === 0)\n      || (dir === 3 && pos[0] === 0);\n  }\n\n  makeSound(pos, dir, synth) {\n    let val = 0;\n    const last = this.props.gridsize - 1;\n    // TODO demystify this code\n    if ((dir % 2 === 1) && (pos[0] === 0 || pos[0] === last)) {\n      val = pos[1];\n    } else {\n      val = pos[0];\n    }\n    synth.triggerAttackRelease(this.props.scale[val], \"8n\");\n  }\n\n\n  updateWidget(idx) {\n    let widget = this.widgets[idx];\n    let synth = this.synths[idx];\n\n    // if this will hit the wall, reverse and sound and finish\n    if (this.didHitWall(widget.pos, widget.dir)) {\n      let newDir = (widget.dir + 2) % 4;\n      this.widgets[idx].dir = newDir;\n      this.makeSound(widget.pos, widget.dir, synth);\n      return;\n    }\n\n    let pos = widget.pos;\n    if (widget.dir === 0) {\n      pos = [widget.pos[0], (widget.pos[1] + 1 + this.props.gridsize) % this.props.gridsize]\n    } else if (widget.dir === 2) {\n      pos = [widget.pos[0], (widget.pos[1] - 1 + this.props.gridsize) % this.props.gridsize]\n    } else if (widget.dir === 1) {\n      pos = [(widget.pos[0] + 1 + this.props.gridsize) % this.props.gridsize, widget.pos[1]];\n    } else {\n      pos = [(widget.pos[0] - 1 + this.props.gridsize) % this.props.gridsize, widget.pos[1]];\n    }\n    this.widgets[idx].pos = pos;\n\n    // bounce off wall and make sound if hit a wall\n    if (this.didHitWall(pos, widget.dir)) {\n      let newDir = (widget.dir + 2) % 4;\n      this.widgets[idx].dir = newDir;\n      this.makeSound(widget.pos, widget.dir, synth);\n    }\n  }\n\n  handleCollisions() {\n    var data = {};\n    this.widgets.forEach(w => {\n      var val = w.pos + \"|\" + w.dir;\n      data[val] = w.idx;\n    });\n\n    // Only collide if opposing direction\n    Object.keys(data).forEach(d => {\n      var rev = d.split(\"|\")[0] + \"|\" + ((parseInt(d.split(\"|\")[1], 10) + 2) % 4);\n      if (data[rev] !== undefined) {\n        // change direction\n        let newDir = (this.widgets[data[rev]].dir + 1) % 4;\n        this.widgets[data[rev]].dir = newDir;\n      }\n    })\n    this.setState({ ...this.state, widgets: this.widgets });\n  }\n\n  groupBy(xs, key, access) {\n    return xs.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x[access]);\n      return rv;\n    }, {});\n  };\n\n\n  subrender() {\n    return (\n      <div>\n        <table>\n          {\n            this.grid.map(num => {\n              return <Row handleCellClick={this.handleCellClick}\n                offset={num} key={num} vals={this.state.vals[num]} len={this.props.gridsize} />\n            })\n          }\n        </table>\n        <br />\n        {\n          this.state.widgets.map(w => {\n            return <Widget\n              idx={w.idx}\n              key={w.idx}\n              dir={w.dir}\n              pos={w.pos}\n            />\n          })\n        }\n\n      </div>\n\n    );\n  }\n}\n","import './App.css';\nimport { Grid } from './Grid';\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid\n          gridsize={7}\n          scale={[\"E3\", \"A3\", \"D4\", \"G4\", \"C5\", \"E5\", \"D6\"]}\n        // TODO -> assert grid size is not larger than scale size\n        />\n      </div >\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nexport default combineReducers({\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore(initialState = {}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}